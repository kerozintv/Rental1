{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHOR\\\\Desktop\\\\Projects\\\\rental-1\\\\src\\\\components\\\\ProtectedRoute.js\";\n\n/* eslint-disable no-useless-rename */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/SHOR/Desktop/Projects/rental-1/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","isAuth","component","Component","rest","props","pathname","state","from","location"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAEA,MAAV;AAAkBC,EAAAA,SAAS,EAAEC,SAA7B;AAAwC,KAAGC;AAA3C,CAAD,KAAsD;AACzE,sBACI,QAAC,KAAD,OACIA,IADJ;AAEA,IAAA,MAAM,EAAGC,KAAD,IAAW;AACf,UAAIJ,MAAJ,EAAY;AACR,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BACI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAI;AAAEK,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAxB;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;AACJ;AAVD;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAfD;;KAAMT,c;AAiBN,eAAeA,cAAf","sourcesContent":["/* eslint-disable no-useless-rename */\r\nimport React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({ isAuth: isAuth, component: Component, ...rest}) => {\r\n    return (\r\n        <Route \r\n        {...rest}\r\n        render={(props) => {\r\n            if (isAuth) {\r\n                return <Component /> ;\r\n            } else {\r\n                return (\r\n                    <Redirect to = {{ pathname: \"/\", state: {from: props.location}}} />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute\r\n"]},"metadata":{},"sourceType":"module"}